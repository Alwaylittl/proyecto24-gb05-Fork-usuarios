from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.perfil_usuario import PerfilUsuario
from openapi_server import util

from openapi_server.models.perfil_usuario import PerfilUsuario  # noqa: E501

class Usuario(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, nombre_usuario=None, correo_electronico=None, avatar=None, perfiles=None):  # noqa: E501
        """Usuario - a model defined in OpenAPI

        :param id: The id of this Usuario.  # noqa: E501
        :type id: int
        :param nombre_usuario: The nombre_usuario of this Usuario.  # noqa: E501
        :type nombre_usuario: str
        :param correo_electronico: The correo_electronico of this Usuario.  # noqa: E501
        :type correo_electronico: str
        :param avatar: The avatar of this Usuario.  # noqa: E501
        :type avatar: str
        :param perfiles: The perfiles of this Usuario.  # noqa: E501
        :type perfiles: List[PerfilUsuario]
        """
        self.openapi_types = {
            'id': int,
            'nombre_usuario': str,
            'correo_electronico': str,
            'avatar': str,
            'perfiles': List[PerfilUsuario]
        }

        self.attribute_map = {
            'id': 'id',
            'nombre_usuario': 'nombreUsuario',
            'correo_electronico': 'correoElectronico',
            'avatar': 'avatar',
            'perfiles': 'perfiles'
        }

        self._id = id
        self._nombre_usuario = nombre_usuario
        self._correo_electronico = correo_electronico
        self._avatar = avatar
        self._perfiles = perfiles

    @classmethod
    def from_dict(cls, dikt) -> 'Usuario':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Usuario of this Usuario.  # noqa: E501
        :rtype: Usuario
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Usuario.


        :return: The id of this Usuario.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Usuario.


        :param id: The id of this Usuario.
        :type id: int
        """

        self._id = id

    @property
    def nombre_usuario(self) -> str:
        """Gets the nombre_usuario of this Usuario.


        :return: The nombre_usuario of this Usuario.
        :rtype: str
        """
        return self._nombre_usuario

    @nombre_usuario.setter
    def nombre_usuario(self, nombre_usuario: str):
        """Sets the nombre_usuario of this Usuario.


        :param nombre_usuario: The nombre_usuario of this Usuario.
        :type nombre_usuario: str
        """

        self._nombre_usuario = nombre_usuario

    @property
    def correo_electronico(self) -> str:
        """Gets the correo_electronico of this Usuario.


        :return: The correo_electronico of this Usuario.
        :rtype: str
        """
        return self._correo_electronico

    @correo_electronico.setter
    def correo_electronico(self, correo_electronico: str):
        """Sets the correo_electronico of this Usuario.


        :param correo_electronico: The correo_electronico of this Usuario.
        :type correo_electronico: str
        """

        self._correo_electronico = correo_electronico

    @property
    def avatar(self) -> str:
        """Gets the avatar of this Usuario.


        :return: The avatar of this Usuario.
        :rtype: str
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar: str):
        """Sets the avatar of this Usuario.


        :param avatar: The avatar of this Usuario.
        :type avatar: str
        """

        self._avatar = avatar

    @property
    def perfiles(self) -> List[PerfilUsuario]:
        """Gets the perfiles of this Usuario.


        :return: The perfiles of this Usuario.
        :rtype: List[PerfilUsuario]
        """
        return self._perfiles

    @perfiles.setter
    def perfiles(self, perfiles: List[PerfilUsuario]):
        """Sets the perfiles of this Usuario.


        :param perfiles: The perfiles of this Usuario.
        :type perfiles: List[PerfilUsuario]
        """

        self._perfiles = perfiles
